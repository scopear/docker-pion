version: 2.1
jobs:
  build:
    docker:
      - image: scopear/docker-base:ci-snyk-alpine3.12
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - setup_remote_docker:   
          version: 19.03.13
      - checkout
      - run:
          name: Docker Login
          command: docker_login
      - run:
          name: Build Images
          command: docker build -t "scopear/docker-pion" .
      - snyk/scan:
          docker-image-name: scopear/docker-pion
          severity-threshold: low
          token-variable: SNYK_TOKEN
          target-file: Dockerfile
          monitor-on-build: false
          fail-on-issues: false
          additional-arguments: --app-vulns --json-file-output=docker_pion_vuln.json
      - run:
          name: Snyk-to-html
          command: |
            snyk-to-html -i docker_pion_vuln.json -o docker_pion_snyk_results.html
      - store_artifacts:
          path: docker_db_snyk_results.html
          destination: docker_db_snyk_results.html
      - run:
          name: Push Images
          command: docker_push "scopear/docker-pion"
      - run:
          name: Create Image Artifact
          command: docker save -o docker-pion.tar scopear/docker-pion
      - store_artifacts:
          path: docker-pion.tar
          destination: docker-pion.tar

  on-prem:
    docker:
      - image: scopear/docker-base:ci-aws-alpine3.12
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - setup_remote_docker:   
          version: 19.03.13
      - run:
          name: Docker Login
          command: docker_login
      - run:
          name: Upload Image
          command: docker_upload_s3 "scopear/docker-pion" "$CIRCLE_TAG"

workflows:
  version: 2
  deploy:
    jobs:
      - build:
          context: scope-circleci
          filters:
            tags:
              only:
                - /^\d+\.\d+\.\d+.*/
                - /^on-prem-\d+\.\d+\.\d+.*/
      - on-prem:
          requires:
           - build
          context: scope-circleci-on-prem
          filters:
            branches:
              ignore:
                - /.*/
            tags:
              only:
                - /^on-prem-\d+\.\d+\.\d+.*$/